(function() {
  var MessageRouter, _;
  _ = require('underscore');
  MessageRouter = (function() {
    function MessageRouter(client) {
      this.client = client;
      this.actions = {};
      client.addListener('message', _.bind(this.onMessage(this)));
      client.addListener('error', function(error) {
        return console.log('ERROR!', error);
      });
    }
    MessageRouter.prototype.onMessage = function(from, to, message) {
      return _.each(this.actions, function(actions, match) {
        if (message.match(match)) {
          return _.each(actions, function(callback) {
            return callback(from, to, message);
          });
        }
      });
    };
    MessageRouter.prototype.addHandler = function(match, callback, scope) {
      if (scope) {
        _.bind(callback, scope);
      }
      if (this.actions[match] === void 0) {
        this.actions[match] = [];
      }
      return this.actions[match].push(callback);
    };
    return MessageRouter;
  })();
  module.exports = MessageRouter;
}).call(this);
