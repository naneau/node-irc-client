# Utilities
fs = require 'fs'
exec  = (require 'child_process').exec

# Output for the compilation
outputDir = '../../static/js'
outputFile = 'app.js'

# Using the power of `find` we do a quick recursive search for CoffeeCcript files
findCoffeeScripts = (callback) ->
    exec 'find . -name \\*.coffee', (err, stdOut, stdIn) ->
        files = stdOut.split '\n'
        callback files

# Quick 'n dirty compile
compile = () ->
    exec 'coffee -o ' + outputDir + ' -j -c `find *.coffee`', (err, stdOut, stdIn) ->
        if not err?
            # Move the temp "concatenation.js" file to outputFile
            exec 'mv ' + outputDir + '/concatenation.js ' + outputDir + '/' + outputFile, (err, stdOut, stdIn) ->
                console.log err
                console.log stdOut
                console.log 'Compiled'

# Single compile
task 'compile', ->
    do compile

# Watch files in this dir and compile on modify
task 'watch', ->

    # Initial compile
    do compile
    
    findCoffeeScripts (files) ->
        console.log 'watching ' + files.length + ' files'
        for file in files 
            do (file) ->
                fs.watchFile file, interval: 100, (curr, prev) ->
                    currDate = new Date curr.mtime
                    prevDate = new Date prev.mtime
                    if currDate > prevDate
                        console.log file + ' changed'
                        do compile
